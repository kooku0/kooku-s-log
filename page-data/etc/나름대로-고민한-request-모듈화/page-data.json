{"componentChunkName":"component---src-templates-blog-post-js","path":"/etc/나름대로-고민한-request-모듈화/","result":{"data":{"site":{"siteMetadata":{"title":"Kooku's log","author":"Kooku","siteUrl":"https://kooku.netlify.com","comment":{"disqusShortName":"","utterances":"koomg9599/kooku-s-log"},"sponsor":{"buyMeACoffeeId":"kooku"}}},"markdownRemark":{"id":"bfb1936e-a78e-5cab-907f-83a056bf1037","excerpt":"며칠 전 Spring 서버 개발자 친구의 코드를 보고 잠깐 고민에 빠진적이 있습니다. 저는 보통 request 함수를 따로 빼서 요청하는 값에 따라 구분해서 사용하는데 이 개발자 친구는 완전히 모듈화 하여 사용했습니다. 예를 들어보자면 저는 다음과 같이 작성했다면 제 친구는 이렇게 작성하더군요. 누가 봐도 밑에 있는게 더 보기 좋죠? ㅎㅎ 저는 header 파일에서 token들을 넣고 requests의 함수에서 불러와 header를 setting…","html":"<p>며칠 전 Spring 서버 개발자 친구의 코드를 보고 잠깐 고민에 빠진적이 있습니다. 저는 보통 request 함수를 따로 빼서 요청하는 값에 따라 구분해서 사용하는데 이 개발자 친구는 완전히 모듈화 하여 사용했습니다. 예를 들어보자면 저는 다음과 같이 작성했다면</p>\n<div class=\"gatsby-highlight\" data-language=\"sheel\"><pre class=\"language-sheel\"><code class=\"language-sheel\">utils\n|--header\nrequests\n|--book-info\n|--book</code></pre></div>\n<p>제 친구는 이렇게 작성하더군요.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">HttpRequest\n<span class=\"token operator\">|</span>--HttpRequestStartLine\n<span class=\"token operator\">|</span>--HttpRequestHeader\n<span class=\"token operator\">|</span>--HttpRequestBody\n<span class=\"token operator\">|</span>--HttpRequest</code></pre></div>\n<p>누가 봐도 밑에 있는게 더 보기 좋죠? ㅎㅎ</p>\n<p>저는 header 파일에서 token들을 넣고 requests의 함수에서 불러와 header를 setting하여 사용하였습니다. 즉 기능별로 모듈화를 하였죠. </p>\n<p>하지만 밑의 경우는 Request부분 모두를 하나씩 분리해서 사용했습니다.</p>\n<p>이것을 보고 제가 가다듬어 사용한다면 조금 멋지게 모듈화를 할 수 있겠다는 생각이 들어 시도를 해보았습니다.</p>\n<p>당연히 이렇게 나눌때는 TypeScript를 사용하는게 좀 더 깔끔하기에 사용하였습니다.</p>\n<blockquote>\n<p>Explore에 대한 자비는 없습니다.</p>\n</blockquote>\n<p>Refectoring~</p>\n<p>코드가 깔끔하지 않아 계속 수정하고 있습니다.</p>\n<p>좋은 코드를 짜는 건 어렵네요.</p>\n<h2 id=\"http-request-module\" style=\"position:relative;\"><a href=\"#http-request-module\" aria-label=\"http request module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Http Request Module</h2>\n<p><strong>Example</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> HttpRequest <span class=\"token keyword\">from</span> <span class=\"token string\">'src/module/http-request'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getBooks</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    params<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> Authentication<span class=\"token operator\">:</span> <span class=\"token string\">'token'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorHandler</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">postBook</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'POST'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> b1<span class=\"token operator\">:</span> <span class=\"token string\">'book1'</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  request<span class=\"token punctuation\">.</span><span class=\"token function\">setErrorHandler</span><span class=\"token punctuation\">(</span>alert<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> response <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">statusCode<span class=\"token operator\">:</span> number</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">error </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>statusCode<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><strong>http request class</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> HttpRequestBody <span class=\"token keyword\">from</span> <span class=\"token string\">'./http-request-body'</span>\n<span class=\"token keyword\">import</span> HttpRequestHeader <span class=\"token keyword\">from</span> <span class=\"token string\">'./http-request-header'</span>\n\ntype THttpMethod <span class=\"token operator\">=</span> <span class=\"token string\">'POST'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'GET'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'DELETE'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'PUT'</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IOptions</span> <span class=\"token punctuation\">{</span>\n  headers<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object\n  params<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object\n  body<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HttpRequest</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> method<span class=\"token operator\">:</span> THttpMethod\n  <span class=\"token keyword\">private</span> header<span class=\"token operator\">:</span> HttpRequestHeader\n  <span class=\"token keyword\">private</span> body<span class=\"token operator\">:</span> HttpRequestBody\n  <span class=\"token keyword\">private</span> url<span class=\"token operator\">:</span> string\n  <span class=\"token keyword\">private</span> xhttp<span class=\"token operator\">:</span> XMLHttpRequest\n  <span class=\"token keyword\">private</span> errorHandler<span class=\"token operator\">:</span> Function <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span>\n  <span class=\"token keyword\">private</span> baseUrl<span class=\"token operator\">:</span> string\n  <span class=\"token keyword\">private</span> query<span class=\"token operator\">:</span> string\n\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">requestUrl<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span>\n    httpMethod<span class=\"token operator\">:</span> THttpMethod<span class=\"token punctuation\">,</span>\n    options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> IOptions<span class=\"token punctuation\">,</span>\n    errorFunction<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Function<span class=\"token punctuation\">,</span></span>\n  <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span>\n      process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'development'</span> <span class=\"token operator\">?</span> <span class=\"token string\">'http://localhost:4000'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'http://google.com'</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> requestUrl\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>method <span class=\"token operator\">=</span> httpMethod\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setOptions</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhttp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorHandler <span class=\"token operator\">=</span> errorFunction <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">setOptions</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options<span class=\"token operator\">?</span><span class=\"token operator\">:</span> Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequestHeader</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span><span class=\"token string\">'headers'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequestBody</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">[</span><span class=\"token string\">'body'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> params <span class=\"token operator\">=</span> options<span class=\"token punctuation\">[</span><span class=\"token string\">'params'</span><span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> params <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseParams</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HttpRequestBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>query <span class=\"token operator\">=</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">parseParams</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">params<span class=\"token operator\">:</span> Object</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> queryString <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">keys</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">k</span> <span class=\"token operator\">=></span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'='</span> <span class=\"token operator\">+</span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&amp;'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">'?'</span> <span class=\"token operator\">+</span> queryString\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">setBaseUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">baseUrl<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseUrl <span class=\"token operator\">=</span> baseUrl\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">httpMethod</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">httpRequestMethod<span class=\"token operator\">:</span> THttpMethod</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>method <span class=\"token operator\">=</span> httpRequestMethod\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">httpMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> THttpMethod <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>method\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">set</span> <span class=\"token function\">requestUrl</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url <span class=\"token operator\">=</span> url\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">get</span> <span class=\"token function\">requestUrl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> string <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>url\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">setBody</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token operator\">:</span> string<span class=\"token punctuation\">,</span> value<span class=\"token operator\">:</span> object <span class=\"token operator\">|</span> string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">setBody</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">setErrorHandler</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">errorHandler<span class=\"token operator\">:</span> Function</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorHandler <span class=\"token operator\">=</span> errorHandler\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">setHeaderAtXMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'application/json'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>header<span class=\"token punctuation\">.</span><span class=\"token function\">getHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> headers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestHeader</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">private</span> <span class=\"token function\">requestCallBack</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token operator\">:</span> any<span class=\"token punctuation\">,</span> reject<span class=\"token operator\">:</span> any</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhttp<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> readyState<span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">,</span> response <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>xhttp\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>readyState <span class=\"token operator\">===</span> XMLHttpRequest<span class=\"token punctuation\">.</span><span class=\"token constant\">DONE</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">===</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>errorHandler <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">errorHandler</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n          <span class=\"token function\">reject</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Promise Error'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">public</span> <span class=\"token function\">sendData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span><span class=\"token constant\">JSON</span> <span class=\"token operator\">|</span> Error <span class=\"token operator\">|</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> xhttp<span class=\"token punctuation\">,</span> method<span class=\"token punctuation\">,</span> baseUrl<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">,</span> body<span class=\"token punctuation\">,</span> query <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n    xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">open</span><span class=\"token punctuation\">(</span>method<span class=\"token punctuation\">,</span> baseUrl <span class=\"token operator\">+</span> url <span class=\"token operator\">+</span> query<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setHeaderAtXMLHttpRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      xhttp<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">getBody</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">requestCallBack</span><span class=\"token punctuation\">(</span>resolve<span class=\"token punctuation\">,</span> reject<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HttpRequest</code></pre></div>\n<p><a href=\"https://github.com/koomg9599/react-request-module\">https://github.com/koomg9599/react-request-module</a></p>","frontmatter":{"title":"나름대로 고민한 request 모듈화","date":"September 30, 2019"}}},"pageContext":{"slug":"/etc/나름대로-고민한-request-모듈화/","previous":{"fields":{"slug":"/etc/졸업과제/"},"frontmatter":{"title":"졸업과제","category":"etc"}},"next":{"fields":{"slug":"/etc/공부하며-참고한-사이트들/"},"frontmatter":{"title":"공부하며 참고한 사이트들","category":"etc"}}}}}