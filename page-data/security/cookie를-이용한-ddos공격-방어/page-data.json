{"componentChunkName":"component---src-templates-blog-post-js","path":"/security/cookie를-이용한-ddos공격-방어/","result":{"data":{"site":{"siteMetadata":{"title":"Kooku's log","author":"Kooku","siteUrl":"https://kooku.netlify.com","comment":{"disqusShortName":"","utterances":"koomg9599/kooku-s-log"},"sponsor":{"buyMeACoffeeId":"kooku"}}},"markdownRemark":{"id":"e573982a-85e7-5fee-a833-4faf7fc4ef20","excerpt":"Cookie란 쿠키는 클라이언트 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일 사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다. 쿠키는 클라이언트의 상태 정보를 로컬에 저장했다가 참조합니다. 쿠키는 사용자가 따로 요청하지 않아도 브라우저가 Request시에 Request Header에 넣어 자동으로 서버에 전송합니다. 일반적인 cookie 동작 방식 클라이언트가 서버에 요청 서버에서 쿠키를 생성 HTTP…","html":"<h2 id=\"cookie란\" style=\"position:relative;\"><a href=\"#cookie%EB%9E%80\" aria-label=\"cookie란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Cookie란</strong></h2>\n<ul>\n<li>쿠키는 클라이언트 로컬에 저장되는 키와 값이 들어있는 작은 데이터 파일</li>\n<li>사용자 인증이 유효한 시간을 명시할 수 있으며, 유효 시간이 정해지면 브라우저가 종료되어도 인증이 유지된다.</li>\n<li>쿠키는 클라이언트의 상태 정보를 로컬에 저장했다가 참조합니다.</li>\n<li>쿠키는 사용자가 따로 요청하지 않아도 브라우저가 Request시에 Request Header에 넣어 자동으로 서버에 전송합니다.</li>\n</ul>\n<h2 id=\"일반적인-cookie-동작-방식\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-cookie-%EB%8F%99%EC%9E%91-%EB%B0%A9%EC%8B%9D\" aria-label=\"일반적인 cookie 동작 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일반적인 <strong>cookie 동작 방식</strong></h2>\n<ol>\n<li>클라이언트가 서버에 요청</li>\n<li>서버에서 쿠키를 생성</li>\n<li>HTTP 헤더에 쿠키를 포함 시켜 응답</li>\n<li>클라이언트가 서버에 요청을 할 때 HTTP 헤더에 쿠키를 넣어서 보냄</li>\n</ol>\n<h3 id=\"ddos-공격은-어떻게-이루어-지는가\" style=\"position:relative;\"><a href=\"#ddos-%EA%B3%B5%EA%B2%A9%EC%9D%80-%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%9D%B4%EB%A3%A8%EC%96%B4-%EC%A7%80%EB%8A%94%EA%B0%80\" aria-label=\"ddos 공격은 어떻게 이루어 지는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>DDoS 공격은 어떻게 이루어 지는가?</strong></h3>\n<p>DDoS 공격에는 TCP Traffic Flooding, IP Flooding등 여러가지 공격방법이 있지만 최근 DDos 공격은 소량의 트래픽으로 시스템의 가용성에 치명적인 손상을 줄 수 있는  Slow Attack이 있습니다. Slow Attack은 동작하는 형태는 상이하나 공통적인 특징은 대량 트래픽을 발생시키지 않고 소량 트래픽을 발생시키되 세션연결을 지속하는 기법을 사용하여 웹서버의 자원을 모두 소모시키는 방법입니다.</p>\n<p>DDos 공격은 전통적으로  대용량의 트래픽을 과다하게 발생시키거나 다수의 공격 에이전트가 동시에 피해 시스템으로 트래픽을 발생시키는 등 정상 트래픽과 구분할 수 있는 특성들이 존재하였습니다. 이러한 특성을 기반으로 과거의 접근법은 공격에이전트 식별, 에이전트별 용량제한, 특정 공격패턴 필터링 등의 방법을 이용하여 공격을 차단하였지만 최근 DDos 공격이 점차 정교해지고 있어 정확한 탐지와 차단에 한계가 있습니다.</p>\n<h3 id=\"ddos공격을-막기위해-쿠키를-어떻게-활용하는가\" style=\"position:relative;\"><a href=\"#ddos%EA%B3%B5%EA%B2%A9%EC%9D%84-%EB%A7%89%EA%B8%B0%EC%9C%84%ED%95%B4-%EC%BF%A0%ED%82%A4%EB%A5%BC-%EC%96%B4%EB%96%BB%EA%B2%8C-%ED%99%9C%EC%9A%A9%ED%95%98%EB%8A%94%EA%B0%80\" aria-label=\"ddos공격을 막기위해 쿠키를 어떻게 활용하는가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DDoS공격을 막기위해 쿠키를 어떻게 활용하는가?</h3>\n<p>HTTP 프로토콜에서 사용하는 쿠키를 이용하여 매 접속마다 다른 쿠키 값을 요구하는 방식으로 정상 사용자와 비정상 공격에이전트를 구분합니다.</p>\n<p>인증 메커니즘에서 먼저 클라이언트에서 웹서버로 요청되는 모든 값에 쿠키를 보내는 것을 클라이언트의 최초 요청 후에 포함되게 됩니다. DDos 공격의 특성상 세션을 유지한 상태에서 요청을 보내는 것이 아니라 매번 새로운 요청을 보내기 때문에 웹서버의 부하를 최소화하기 위해 최초 요청 시 요청된 현재 페이지로 HTTp 302 Redirect를 하게 됩니다. Redirect의 경우 유지된 세션을 즉시 종료시키기 때문에 세션이 즉시 끊어지고 추가적인 트래픽 유입을 방지하게 됩니다.</p>\n<p>공격 에이전트의 경우 Redirect를 인지하여 새로운 접속이 이루어 질 때에는 웹서버에서 보내는 쿠키에 정상적으로 응답을 해야 합니다. 만약 쿠키에 정상적인 응답을 하지 못한다면 이는 공격 에이전트로 간주하고 세션을 즉시 종료합니다.</p>\n<p>사용자 인증을 위해 웹서버에서 클라이언트로 요청되는 쿠키에는 유효성 검증을 위해 두 가지의 방법이 적용됩니다. 첫 번째 방법은 재사용 방지를 위한 Time-Stamp와 두 번째 방법은 전송된 Time-Stamp에 대한 해시 값을 요청하는 것 입니다. 즉, 웹서버에서 송신되는 쿠키에 매번 서버의 응답시간을 입력하고 접속자 PC로 하여금 수신된 시간에 대한 해시 값을 요청하여 쿠키의 재사용을 방지하고 매번 클라이언트가 해시를 계산하게 함으로 공격에이전트에 의한 자동적으로 생성되는 트래픽에 대하여 식별이 가능하게 합니다.</p>\n<h3 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Reference</strong></h3>\n<ul>\n<li><a href=\"https://interconnection.tistory.com/74\">쿠키와 세션 개념</a> :: 라이언 서버</li>\n<li>최상용 외, “쿠키 자동인증을 이용한 HTTP DDoS 공격 방어기법”, 한국정보과학회 (KISS), 2013</li>\n<li>“DDoS 공격대응 가이드”, 한국인터넷진흥원 (KISA), 2012</li>\n</ul>","frontmatter":{"title":"Cookie를 이용한 DDoS공격 방어","date":"October 01, 2019"}}},"pageContext":{"slug":"/security/cookie를-이용한-ddos공격-방어/","previous":{"fields":{"slug":"/etc/공부하며-참고한-사이트들/"},"frontmatter":{"title":"공부하며 참고한 사이트들","category":"etc"}},"next":{"fields":{"slug":"/etc/나만의-commit-message-작성법/"},"frontmatter":{"title":"나만의 commit message 작성법","category":"etc"}}}}}