{"componentChunkName":"component---src-templates-blog-post-js","path":"/Elasticsearch/elasticsearch-and-node.js/","result":{"data":{"site":{"siteMetadata":{"title":"Kooku's log","author":"Kooku","siteUrl":"https://kooku.netlify.com","comment":{"disqusShortName":"","utterances":"koomg9599/kooku-s-log"},"sponsor":{"buyMeACoffeeId":"kooku"}}},"markdownRemark":{"id":"a399f1b1-8293-5b38-b68c-58658a49c06b","excerpt":"Elasticsearch 와 Node.js를 연동(?)해본다. 링크 를 참고하여 적었다. connection 전에는 elasticsearch를 실행해야하는 것을 명심하자 elasticsearch에 대한 내용은 링크에서 확인할 수 있다. 1. Setting up your Node environment 먼저 와 을 설치해준다. 주의해야할 사항이 있다면 상위 폴더 이름이 ‘elasticsearch’이면 제대로 설치가 이루어 지지 않는다. 2. Referring to your deployment in…","html":"<blockquote>\n<p>Elasticsearch 와 Node.js를 연동(?)해본다.</p>\n<p><a href=\"https://www.compose.com/articles/getting-started-with-elasticsearch-and-node/\">링크</a> 를 참고하여 적었다.</p>\n<p>connection 전에는 elasticsearch를 실행해야하는 것을 명심하자</p>\n<p>elasticsearch에 대한 내용은 <a href=\"../Elastic/README.md\">링크</a>에서 확인할 수 있다.</p>\n</blockquote>\n<h2 id=\"1-setting-up-your-node-environment\" style=\"position:relative;\"><a href=\"#1-setting-up-your-node-environment\" aria-label=\"1 setting up your node environment permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Setting up your Node environment</h2>\n<p>먼저 <code class=\"language-text\">elasticsearch</code>와 <code class=\"language-text\">get-json</code>을 설치해준다.</p>\n<p>주의해야할 사항이 있다면 상위 폴더 이름이 ‘elasticsearch’이면 제대로 설치가 이루어 지지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> elasticsearch get-json</code></pre></div>\n<h2 id=\"2-referring-to-your-deployment-in-node\" style=\"position:relative;\"><a href=\"#2-referring-to-your-deployment-in-node\" aria-label=\"2 referring to your deployment in node permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Referring to your deployment in Node</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// connection.js</span>\n\n<span class=\"token keyword\">var</span> elasticsearch<span class=\"token operator\">=</span><span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'elasticsearch'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">elasticsearch<span class=\"token punctuation\">.</span>Client</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">{</span>  \n  hosts<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'http://[username]:[password]@[server]:[port]/'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'http://[username]:[password]@[server]:[port]/'</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> client<span class=\"token punctuation\">;</span>  </code></pre></div>\n<blockquote>\n<p>Node의 주소를 적을때 ‘https’로 적으니 제대로 연결이 되지 않는 경우가 발생하였으나 ‘http’로 바꾸니 제대로 작동하였다.</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//info.js</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./connection.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclient<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span><span class=\"token function\">health</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"-- Client Health --\"</span><span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>위의 코드를 실행시켜 현재 clustering된 node들의 상태를 살펴보자</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">--</span> Client Health <span class=\"token operator\">--</span> <span class=\"token punctuation\">{</span> cluster_name<span class=\"token operator\">:</span> <span class=\"token string\">'el-petitions'</span><span class=\"token punctuation\">,</span>\n  status<span class=\"token operator\">:</span> <span class=\"token string\">'green'</span><span class=\"token punctuation\">,</span>\n  timed_out<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  number_of_nodes<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  number_of_data_nodes<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n  active_primary_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  active_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  relocating_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  initializing_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  unassigned_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  delayed_unassigned_shards<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  number_of_pending_tasks<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  number_of_in_flight_fetch<span class=\"token operator\">:</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>status</em> 를 확인하면 된다.</p>\n<h2 id=\"3-indexing\" style=\"position:relative;\"><a href=\"#3-indexing\" aria-label=\"3 indexing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Indexing</h2>\n<h3 id=\"31-index-생성\" style=\"position:relative;\"><a href=\"#31-index-%EC%83%9D%EC%84%B1\" aria-label=\"31 index 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.1 index 생성</h3>\n<p>예시로 gov’ index를 만들어 보겠다. 어떠한 index를 만들어도 상관없다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//create.js</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./connection.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclient<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n  index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"create\"</span><span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>다음과 같은 화면을 볼 수 있을 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">create <span class=\"token punctuation\">{</span> acknowledged: <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>  </code></pre></div>\n<h3 id=\"32-index-삭제\" style=\"position:relative;\"><a href=\"#32-index-%EC%82%AD%EC%A0%9C\" aria-label=\"32 index 삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.2 index 삭제</h3>\n<p>이번에는 index를 삭제하는 것을 해보겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//delete.js</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./connection.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclient<span class=\"token punctuation\">.</span>indices<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"delete\"</span><span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">delete <span class=\"token punctuation\">{</span> acknowledged: <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span>  </code></pre></div>\n<h3 id=\"33--document-삽입\" style=\"position:relative;\"><a href=\"#33--document-%EC%82%BD%EC%9E%85\" aria-label=\"33  document 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3  document 삽입</h3>\n<p>이제 제대로된 데이터를 저장해보도록 하겠다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//document_add.js</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./connection.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n  index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span><span class=\"token punctuation\">,</span>\n  id<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'constituencies'</span><span class=\"token punctuation\">,</span>\n  body<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"ConstituencyName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Ipswich\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ConstituencyID\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"E14000761\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ConstituencyType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Borough\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"Electorate\"</span><span class=\"token operator\">:</span> <span class=\"token number\">74499</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"ValidVotes\"</span><span class=\"token operator\">:</span> <span class=\"token number\">48694</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span> _index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span><span class=\"token punctuation\">,</span>\n  _type<span class=\"token operator\">:</span> <span class=\"token string\">'constituencies'</span><span class=\"token punctuation\">,</span>\n  _id<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n  _version<span class=\"token operator\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n  created<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>index의 값과 version등이 나오게  된다.</p>\n<blockquote>\n<p>이번에는 <code class=\"language-text\">info.js</code> 에 코드를 한줄 추가해 보</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">...</span>\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span><span class=\"token punctuation\">,</span>type<span class=\"token operator\">:</span> <span class=\"token operator\">></span><span class=\"token string\">'constituencies'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"constituencies\"</span><span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이제 info.js를 실행해보면 </p>\n<p>생성된 constituency 하나를 볼 수 있다.</p>\n</blockquote>\n<h3 id=\"34-document--삭제\" style=\"position:relative;\"><a href=\"#34-document--%EC%82%AD%EC%A0%9C\" aria-label=\"34 document  삭제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.4 document  삭제</h3>\n<p>삽입한 document를 삭제해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">//document_del.js</span>\n\n<span class=\"token keyword\">var</span> client <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./connection.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nclient<span class=\"token punctuation\">.</span><span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>  \n  index<span class=\"token operator\">:</span> <span class=\"token string\">'gov'</span><span class=\"token punctuation\">,</span>\n  id<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'constituencies'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span>resp<span class=\"token punctuation\">,</span>status</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>결과</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token punctuation\">{</span> found: true,\n  _index: <span class=\"token string\">'gov'</span>,\n  _type: <span class=\"token string\">'constituencies'</span>,\n  _id: <span class=\"token string\">'1'</span>,\n  _version: <span class=\"token number\">3</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>여기서 info.js를 실행해보면 document count가 이제 0이 된 것을 알 수 있다.</p>\n</blockquote>\n<h3 id=\"35-bulk---다중-삽입\" style=\"position:relative;\"><a href=\"#35-bulk---%EB%8B%A4%EC%A4%91-%EC%82%BD%EC%9E%85\" aria-label=\"35 bulk   다중 삽입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.5 bulk - 다중 삽입</h3>\n<p>만약 많은 document를 동시에 삽입하고 싶다면  <code class=\"language-text\">bulk</code>를 이용하여 쉽게 삽입할 수 있다.</p>\n<p>index format과 유사하며 index 와 document의 id, type을 하는 object 와 하나의 body를 전송하게</p>","frontmatter":{"title":"Elasticsearch and Node.js","date":"June 23, 2019"}}},"pageContext":{"slug":"/Elasticsearch/elasticsearch-and-node.js/","previous":{"fields":{"slug":"/react/react-app과-express-연동/"},"frontmatter":{"title":"React App과 Express 연동","category":"react"}},"next":{"fields":{"slug":"/api/리액트에서-지도api-사용하기/"},"frontmatter":{"title":"리액트에서 지도API 사용하기","category":"api"}}}}}